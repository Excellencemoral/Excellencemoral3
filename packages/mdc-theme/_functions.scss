//
// Copyright 2017 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

@import "./constants";

/**
 * Used by the functions below to shift a color's lightness by approximately
 * one index within its tonal palette.
 * E.g., shift from Red 500 to Red 400 or Red 600.
 */
$_mdc-theme-tonal-offset: 7%;

/**
 * Calculate the luminance for a color.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
@function mdc-theme-luminance($color) {
  $red: nth($mdc-theme-linear-channel-values, red($color) + 1);
  $green: nth($mdc-theme-linear-channel-values, green($color) + 1);
  $blue: nth($mdc-theme-linear-channel-values, blue($color) + 1);

  @return .2126 * $red + .7152 * $green + .0722 * $blue;
}

/**
 * Calculate the contrast ratio between two colors.
 * See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 */
@function mdc-theme-contrast($back, $front) {
  $backLum: mdc-theme-luminance($back) + .05;
  $foreLum: mdc-theme-luminance($front) + .05;

  @return max($backLum, $foreLum) / min($backLum, $foreLum);
}

/**
 * Determine whether to use dark or light text on top of given color.
 * Returns "dark" for dark text and "light" for light text.
 */
@function mdc-theme-light-or-dark($color) {
  $minimumContrast: 3.1;

  $lightContrast: mdc-theme-contrast($color, white);
  $darkContrast: mdc-theme-contrast($color, rgba(black, .87));

  @if ($lightContrast < $minimumContrast) and ($darkContrast > $lightContrast) {
    @return "dark";
  }

  @else {
    @return "light";
  }
}

// Return the given number if $value >= $min and $value <= $max. If $value falls
// outside those bounds, return the nearest boundary value ($max or $min).
@function mdc-theme-clamp-number_($value, $min, $max) {
  @return max($min, min($max, $value));
}

// lighten() and darken() require values to be between 0% and 100%.
@function mdc-theme-clamp-lighten-amount_($percentage) {
  @return mdc-theme-clamp-number_($percentage, 0%, 100%);
}

// Darken the given color by approximately the specified number of indexes
// within its tonal palette.
//
// If the color is already very dark, it will be lightened instead of darkened
// to ensure that the returned value is visually distinct from the input color.
//
// If the color is very light, it will be darkened twice as much as usual to
// ensure that the returned value is visually distinct from the light variant
// (which will actually end up being a dark shade).
@function mdc-theme-dark-variant($color, $num-indexes: 2) {
  $offset: $_mdc-theme-tonal-offset;
  $amount: $offset * $num-indexes;

  @if mdc-theme-luminance($color) < .2 {
    @return lighten($color, mdc-theme-clamp-lighten-amount_($amount));
  }

  @else if mdc-theme-luminance($color) > .8 {
    @return darken($color, mdc-theme-clamp-lighten-amount_($amount * 2));
  }

  @else {
    @return darken($color, mdc-theme-clamp-lighten-amount_($amount));
  }
}

// Lighten the given color by approximately the specified number of indexes
// within its tonal palette.
//
// If the color is already very light, it will be darkened instead of lightened
// to ensure that the returned value is visually distinct from the input color.
//
// If the color is very dark, it will be lightened twice as much as usual to
// ensure that the returned value is visually distinct from the dark variant
// (which will actually end up being a light tint).
@function mdc-theme-light-variant($color, $num-indexes: 2) {
  $offset: $_mdc-theme-tonal-offset;
  $amount: $offset * $num-indexes;

  @if mdc-theme-luminance($color) < .2 {
    @return lighten($color, mdc-theme-clamp-lighten-amount_($amount * 2));
  }

  @else if mdc-theme-luminance($color) > .8 {
    @return darken($color, mdc-theme-clamp-lighten-amount_($amount));
  }

  @else {
    @return lighten($color, mdc-theme-clamp-lighten-amount_($amount));
  }
}
