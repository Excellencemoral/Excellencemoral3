//
// Copyright 2017 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

@import "../functions";
@import "../variables";
@import "@material/theme/variables";
@import "@material/theme/mixins";
@import "@material/typography/mixins";
@import "@material/typography/variables";

// postcss-bem-linter: define textfield
.mdc-text-field {

  &__input {
    @include mdc-theme-prop(color, text-primary-on-light);
    @include mdc-typography-base;
    // We use only a subset of the MDC typography values here as changing things such as line-height
    // affects how the labels are transformed.
    // TODO: Re-add setting the font-size from mdc-typography-styles (currently
    // setting it here has no effect because it is overriden by the font-size
    // given below).
    @each $prop in (letter-spacing) {
      #{$prop}: map-get(map-get($mdc-typography-styles, subheading2), $prop);
    }

    width: 100%;
    padding: 0 0 8px;
    transition: mdc-text-field-transition(opacity);
    border: none;
    border-bottom: 1px solid $mdc-text-field-underline-on-light-idle;
    background: none;
    font-size: inherit;
    appearance: none;

    &::placeholder {
      @include mdc-theme-prop(color, text-hint-on-light);

      transition: mdc-text-field-transition(color);
      opacity: 1;
    }

    &:hover {
      border-color: $mdc-text-field-underline-on-light;
    }

    &:focus {
      outline: none;

      &::placeholder {
        @include mdc-theme-prop(color, $mdc-text-field-light-placeholder);
      }
    }

    // Remove red outline on firefox
    &:invalid {
      box-shadow: none;
    }

    @include mdc-theme-dark {
      @include mdc-theme-prop(color, text-primary-on-dark);

      border-bottom: 1px solid $mdc-text-field-underline-on-dark-idle;

      &:hover {
        border-bottom: 1px solid $mdc-text-field-underline-on-dark;
      }

      &::placeholder {
        @include mdc-theme-prop(color, text-hint-on-dark);
      }

      &:focus::placeholder {
        @include mdc-theme-prop(color, $mdc-text-field-dark-placeholder);
      }
    }
  }
}

// Graceful degredation for css-only inputs

.mdc-text-field {
  &:not(.mdc-text-field--upgraded):not(.mdc-text-field--textarea) .mdc-text-field__input {
    transition: mdc-text-field-transition(border-bottom-color);
    border-bottom: 1px solid $mdc-text-field-divider-on-light;
  }

  &:not(.mdc-text-field--upgraded) .mdc-text-field__input {
    &:focus {
      @include mdc-theme-prop(border-color, primary);
    }

    &:disabled {
      @include mdc-theme-prop(color, $mdc-text-field-dark-placeholder);

      border-bottom-style: dotted;
    }

    // stylelint-disable selector-max-specificity
    &:invalid:not(:focus) {
      border-color: $mdc-text-field-error-on-light;
    }
    // stylelint-enable selector-max-specificity
  }

  @include mdc-theme-dark {
    &:not(.mdc-text-field--upgraded) .mdc-text-field__input {
      &:not(:focus) {
        border-color: rgba(white, .12);
      }

      &:disabled {
        @include mdc-theme-prop(color, $mdc-text-field-dark-placeholder);

        border-color: $mdc-text-field-disabled-border-on-dark;
        background-color: $mdc-textarea-disabled-background-on-dark;
      }

      // stylelint-disable selector-max-specificity
      &:invalid:not(:focus) {
        border-color: $mdc-text-field-error-on-dark;
      }
      // stylelint-enable selector-max-specificity
    }
  }
}