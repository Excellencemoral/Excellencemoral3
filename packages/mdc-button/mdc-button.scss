//
// Copyright 2016 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

@import "@material/elevation/mixins";
@import "@material/ripple/mixins";
@import "@material/theme/mixins";
@import "@material/theme/variables";
@import "@material/typography/mixins";
@import "./mixins";

// postcss-bem-linter: define button
.mdc-button {
  @include mdc-button-base_;
  @include mdc-button-text-theme((
    bg-color: transparent,
    fg-color: text-primary-on-light,
    ripple-config: (base-color: black, opacity: .16),
    tap-highlight-color: rgba(0, 0, 0, .16)
  ));
  @include mdc-theme-dark(".mdc-button") {
    @include mdc-button-text-theme((
      fg-color: text-primary-on-dark,
      ripple-config: (base-color: white, opacity: .16),
      tap-highlight-color: rgba(white, .16)
    ));
  }
}

.mdc-button--raised {
  @include mdc-button--raised_;
  @include mdc-button-raised-theme((
    bg-color: black,
    fg-color: text-primary-on-dark,
    ripple-config: (base-color: white, opacity: .32),
    tap-highlight-color: rgba(255, 255, 255, .32)
  ));
  @include mdc-theme-dark(".mdc-button") {
    @include mdc-button-raised-theme((
      bg-color: white,
      fg-color: text-primary-on-light,
      ripple-config: (base-color: black, opacity: .32),
      tap-highlight-color: rgba(black, .32)
    ));
  }
}

.mdc-button--unelevated {
  @include mdc-button-unelevated-theme((
    bg-color: black,
    fg-color: text-primary-on-dark,
    ripple-config: (base-color: white, opacity: .32),
    tap-highlight-color: rgba(255, 255, 255, .32)
  ));
  @include mdc-theme-dark(".mdc-button") {
    @include mdc-button-unelevated-theme((
      bg-color: white,
      fg-color: text-primary-on-light,
      ripple-config: (base-color: black, opacity: .32),
      tap-highlight-color: rgba(black, .32)
    ));
  }
}

.mdc-button--stroked {
  @include mdc-button-stroked-theme((
    stroke-width: 2px,
    stroke-style: solid,
    stroke-color: text-primary-on-light
  ));
  @include mdc-theme-dark(".mdc-button") {
    @include mdc-button-stroked-theme((
      stroke-color: text-primary-on-dark
    ));
  }
}

.mdc-button--compact {
  @include mdc-button--compact_;
}

.mdc-button--dense {
  @include mdc-button--dense_;
}

@each $theme-style in (primary, secondary) {
  // Needed for backward compatibility. Theme uses the term "secondary", but button still calls it "accent" for now.
  $modifier: if($theme-style == "secondary", "accent", $theme-style);

  // postcss-bem-linter: ignore
  .mdc-button--#{$modifier} {
    $unfilled-text-value: map-get($mdc-theme-property-values, $theme-style);
    $filled-text-value: map-get($mdc-theme-property-values, text-primary-on-#{$theme-style});

    @include mdc-button-text-theme((
      fg-color: $unfilled-text-value,
      ripple-config: (base-color: $unfilled-text-value, opacity: .16),
      tap-highlight-color: rgba($unfilled-text-value, .16)
    ));
    @include mdc-theme-dark(".mdc-button") {
      @include mdc-button-text-theme((
        fg-color: $unfilled-text-value,
        ripple-config: (base-color: $unfilled-text-value, opacity: .16),
        tap-highlight-color: rgba($unfilled-text-value, .16)
      ));
    }

    // postcss-bem-linter: ignore
    &.mdc-button--stroked {
      @include mdc-button-stroked-theme((
        stroke-color: $unfilled-text-value
      ));
      @include mdc-theme-dark(".mdc-button") {
        @include mdc-button-stroked-theme((
          stroke-color: $unfilled-text-value
        ));
      }
    }

    // postcss-bem-linter: ignore
    &.mdc-button--raised{
      @include mdc-button-raised-theme((
        bg-color: $theme-style,
        fg-color: $filled-text-value,
        ripple-config: (base-color: $filled-text-value, opacity: .32),
        tap-highlight-color: rgba($filled-text-value, .32)
      ));
    }

    // postcss-bem-linter: ignore
    &.mdc-button--unelevated {
      @include mdc-button-unelevated-theme((
        bg-color: $theme-style,
        fg-color: $filled-text-value,
        ripple-config: (base-color: $filled-text-value, opacity: .32),
        tap-highlight-color: rgba($filled-text-value, .32)
      ));
    }

  }
}

// Disabled button styles need to be last to ensure they override other primary/accent/dark styles

.mdc-button {
  fieldset:disabled &,
  &:disabled {
    @include mdc-button-text-theme((
      fg-color: text-disabled-on-light
    ));
    @include mdc-theme-dark(".mdc-button") {
      @include mdc-button-text-theme((
        fg-color: text-disabled-on-dark
      ));
    }
  }
}

.mdc-button--raised {
  fieldset:disabled &,
  &:disabled {
    @include mdc-button-raised-theme((
      bg-color: rgba(black, .38),
      fg-color: text-primary-on-dark
    ));
    @include mdc-theme-dark(".mdc-button") {
      @include mdc-button-raised-theme((
        bg-color: rgba(white, .38),
        fg-color: text-disabled-on-dark
      ));
    }
  }
}

.mdc-button--unelevated {
  fieldset:disabled &,
  &:disabled {
    @include mdc-button-unelevated-theme((
      bg-color: rgba(black, .38),
      fg-color: text-primary-on-dark
    ));
    @include mdc-theme-dark(".mdc-button") {
      @include mdc-button-unelevated-theme((
        bg-color: rgba(white, .38),
        fg-color: text-disabled-on-dark
      ));
    }
  }
}

.mdc-button--stroked {
  fieldset:disabled &,
  &:disabled {
    @include mdc-button-stroked-theme((
      stroke-color: text-disabled-on-light
    ));
    @include mdc-theme-dark(".mdc-button") {
      @include mdc-button-stroked-theme((
        stroke-color: text-disabled-on-dark
      ));
    }
  }
}
// postcss-bem-linter: end
