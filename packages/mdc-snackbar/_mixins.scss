//
// Copyright 2018 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

@import "@material/elevation/mixins";
@import "@material/shape/mixins";
@import "@material/theme/functions";
@import "@material/theme/mixins";
@import "@material/theme/variables"; // for mdc-theme-prop-value() and mdc-theme-text-emphasis()
@import "./variables";

@mixin mdc-snackbar-z-index($z-index) {
  z-index: $z-index;
}

@mixin mdc-snackbar-viewport-margin($margin) {
  margin: $margin;
}

@mixin mdc-snackbar-min-width($min-width) {
  .mdc-snackbar__surface {
    min-width: $min-width;
  }
}

@mixin mdc-snackbar-max-width($max-width) {
  .mdc-snackbar__surface {
    max-width: $max-width;
  }
}

@mixin mdc-snackbar-elevation($z-index) {
  .mdc-snackbar__surface {
    @include mdc-elevation($z-index);
  }
}

@mixin mdc-snackbar-shape-radius($radius) {
  .mdc-snackbar__surface {
    @include mdc-shape-radius($radius);
  }
}

@mixin mdc-snackbar-fill-color($overlay-color, $overlay-opacity, $surface-color: surface) {
  .mdc-snackbar__surface {
    @include mdc-theme-prop(background-color, $surface-color);
  }

  .mdc-snackbar__overlay {
    @include mdc-theme-prop(background-color, rgba(mdc-theme-prop-value($overlay-color), $overlay-opacity));
  }
}

@mixin mdc-snackbar-label-ink-color($color, $opacity) {
  @if type-of($opacity) != number {
    $opacity: mdc-theme-text-emphasis($opacity);
  }

  .mdc-snackbar__label {
    @include mdc-theme-prop(color, rgba(mdc-theme-prop-value($color), $opacity));
  }
}
